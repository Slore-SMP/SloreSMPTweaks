plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
}

loom {
	runs {
		datagen {
			client()
			name "Data Generation"

			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.modid=slore"
			vmArg "-Dfabric-api.datagen.output-dir=${project.file("src/main/generated")}"
			runDir "build/datagen"
		}
		client {
			client()
			name "Fabric Client"

			programArgs "--username", "Ladybrine"
			programArgs "--uuid", "5d66606c-949c-47ce-ba4c-a1b9339ba3c8"
		}
	}
	accessWidenerPath = file("src/main/resources/slore.accesswidener")
}

sourceSets {
	main {
		resources.srcDir 'src/main/generated'
		resources.exclude '.cache'
	}
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url "https://api.modrinth.com/maven" }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "maven.modrinth:macu-lib:${project.macu_lib_version}-${project.minecraft_version}-fabric"
	modCompileOnly "maven.modrinth:supplementaries:IWbAxeBd"
	modCompileOnly "maven.modrinth:moonlight:IECRKQk9"
	modCompileOnly "maven.modrinth:lets-do-meadow:Zg8XweNS"
	modCompileOnly "maven.modrinth:architectury-api:WbL7MStR"
	}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand (
				"version": inputs.properties.version,
		)
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}